import pygame
import time 
import random 
pygame.font.init()

screen_width = 1000
screen_heigth = 800
WIN = pygame.display.set_mode((screen_width, screen_heigth))
pygame.display.set_caption("My Game")

BG = pygame.transform.scale(pygame.image.load("bg.jpeg"), (screen_width, screen_heigth))

player_width = 40
player_heigth = 60

PLAYER_VEL = 5
star_width = 10
star_heigth = 20 
STAR_VEL = 5

FONT = pygame.font.SysFont("comicsans", 30)

def draw(player, elapsed_time, stars, score, final_score):
    WIN.blit(BG, (0, 0))
    
    time_text = FONT.render(f"Time: {round(elapsed_time)}s", 1, "white")
    WIN.blit(time_text, (10, 10))
    
    pygame.draw.rect(WIN, "red", player)
    

    score_text = FONT.render(f"SCORE: {round(score)}", 1, "white")
    WIN.blit(score_text, (10, 50))
    
    for star in stars:
        pygame.draw.rect(WIN, "white", star)

    pygame.display.update()

def main():
    run = True
    
    player = pygame.Rect(200, screen_heigth - player_heigth, player_width, player_heigth)
    
    clock = pygame.time.Clock()
    
    start_time = time.time()
    
    elapsed_time = 0 
    
    score = 0
    
    final_score = score
    
    star_add_increment = 2000
    star_count = 0 #does not represent the ammount of stars on the screen but how many we should add 
    
    stars = []
    hit = False

    while run:
        
        star_count += clock.tick(60) #returns the number of miliseconds since the last clock tick
        elapsed_time = time.time() - start_time
        
        if star_count > star_add_increment:
            for _ in range(3):
                star_x = random.randint(0, screen_width - star_width)
                star = pygame.Rect(star_x, -star_heigth, star_width, star_heigth) #negative 
                stars.append(star)
                
            star_add_increment = max(200, star_add_increment - 50)
            star_count = 0
                


            
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                run = False 
                break
        keys = pygame.key.get_pressed()
        if keys[pygame.K_LEFT] and player.x - PLAYER_VEL >= 0:
            player.x -= PLAYER_VEL
        if keys[pygame.K_RIGHT]and player.x + PLAYER_VEL + player_width <= screen_width >= 0:
            player.x += PLAYER_VEL
            
        for star in stars[:]:
            star.y += STAR_VEL
            if star.y > screen_heigth:
                stars.remove(star)
                score = score + 1 
                
            elif star.y + star_heigth >= player.y and star.colliderect(player):
                stars.remove(star)
                hit = True 
                break

            
        if hit:
            lost_text = FONT.render("You Lost" , 1, "Red")
            
            WIN.blit(lost_text, (screen_width/2 - lost_text.get_width()/2, screen_heigth/2 - lost_text.get_height()/2))  #notice we subtract the length of the text so it fits in the middle    
            
            final_score_text = FONT.render(f"SCORE: {round(score)}", 1, "white")
            
            WIN.blit(final_score_text, (screen_width/2 - lost_text.get_width()/2, screen_heigth/2 - lost_text.get_height()/2 - 50))
            
            pygame.display.update()
            
            pygame.time.delay(4000)
            break
            
        draw(player, elapsed_time, stars, score, final_score)
            


    pygame.quit()

if __name__ == "__main__":
    main()   #makes sure we are directly running our def main 
